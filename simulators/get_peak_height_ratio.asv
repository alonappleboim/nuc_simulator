function [ ratio ] = get_peak_height_ratio( sim_centers, data_centers, NFR_pos )
%GET_PEAK_HEIGHT_RATIO get the ratio delta between the sim +1 and -1, and
%the data +1 and -1.
%   The function 

factor = 5;

%%% find the PEAK LOCATIONS of the data and the simulation:
sim_smooth = conv(sim_centers, gausswin(100), 'same');
sim_smooth = conv(sim_smooth, gausswin(20), 'same');
[sim_peaks,sim_positions] = findpeaks(sim_smooth, 'MinPeakHeight', sum(sim_smooth)./(1.5*length(sim_smooth)));
data_smooth = conv(data_centers, gausswin(100), 'same');
data_smooth = conv(data_smooth, gausswin(20), 'same');
[data_peaks,data_positions] = findpeaks(data_smooth, 'MinPeakHeight', sum(data_smooth)./(1.5*length(data_smooth)));

% keep just the NFR peaks:
sim_positions = sim_positions((sim_positions > NFR_pos(1)) & (sim_positions < NFR_pos(end)));
sim_peaks = sim_peaks((sim_positions > NFR_pos(1)) & (sim_positions < NFR_pos(end)));
data_positions = data_positions((data_positions > NFR_pos(1)) & (data_positions < NFR_pos(end)));
data_peaks = data_peaks((data_positions > NFR_pos(1)) & (data_positions < NFR_pos(end)));

% find the ratios of the sim and the data:
if (length(sim_peaks)<2 || length(data_peaks)<2)
    ratio = nan;
    
else
    sim_plus1 = sim_peaks(end);
    sim_minus1 = sim_peaks(end-1);
    data_plus1 = data_peaks(end);
    data_minus1 = data_peaks(end-1);
    
    % make sure we use the larger than 1 ratio, with the right sign. we use 
    % 0.9 because we don't want close peaks to get a 2 in the ratio, even 
    % though it should be low:
    sim_ratio = sim_plus1 / sim_minus1;
    if (sim_ratio < 0.9)
        sim_ratio = -1/sim_ratio;
    end
    data_ratio = data_plus1 / data_minus1;
    if (data_ratio < 0.9)
        data_ratio = -1/data_ratio;
    end

    ratio = abs(sim_ratio - data_ratio) * factor;
    
end

end

