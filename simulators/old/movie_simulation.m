avg_nuc_num = zeros(1,500);
nuc_a_rate = [0.0002 : 0.0002 : 0.1];
a_e_ratio = [0.002 : 0.002 : 1];

for i = 2 : 2 : 1000
    
    params = struct('report', nan, ...
                      'n_steps', 500,...
                      'gen_len', 1000,...
                      'nuc_width', 147, ...
                      'REB1_width', 10, ...
                      'ABF1_width', 14, ...
                      'RAP1_width', 15, ...
                      'slide_len', 5, ...
                      'linker_len', 10, ...
                      'poly_rate', 0, ...
                      'poly_pos', 1100:2500, ...
                      'REB1_a_rate', 0, ...
                      'REB1_e_rate', 0, ...
                      'ABF1_a_rate', 0, ...
                      'ABF1_e_rate', 0, ...
                      'RAP1_a_rate', 0, ...
                      'RAP1_e_rate', 0, ...
                      'nuc_base_a_rate', 1, ...
                      'nuc_base_e_rate', 1, ...
                      'nuc_base_r_rate', 0, ...
                      'nuc_base_l_rate', 0, ...
                      'TF_evic_intensity', 0, ...
                      'RSC_evic_intensity', 0, ...
                      'RSC_evic_length', 0, ...
                      'RSC_slide_intensity', 0, ...
                      'RSC_slide_length', 0, ...
                      'nuc_a_rate', nuc_a_rate(i/2)*ones(1,1000), ...
                      'nuc_e_rate', 0.1*ones(1,1000), ...
                      'nuc_r_rate', 0*ones(1,1000), ...
                      'nuc_l_rate', 0*ones(1,1000));

    s0 = zeros(1,1000);

    [nuc_sum, time, nuc_s_hist, REB1_s_hist, ABF1_s_hist, RAP1_s_hist] = ...
            Test_Simulate(params, 'n_steps', params.n_steps, 's0', s0, 'report', 0);

    avg_nuc_num(i/2) = sum(sum(nuc_s_hist(100:end , :))) / length(nuc_s_hist(100:end,1));

end

figure
plot(a_e_ratio, avg_nuc_num)